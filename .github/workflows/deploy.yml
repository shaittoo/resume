name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Or master, depending on your default branch name

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, gd, sqlite3
          tools: composer

      - name: Copy .env file
        run: cp env .env

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader

      - name: Configure for SQLite and Set Up Database
        run: |
          # sed -i 's/CI_ENVIRONMENT = .*/CI_ENVIRONMENT = production/g' .env
          sed -i 's/^database\.default\.DBDriver.*/database.default.DBDriver = SQLite3/g' .env
          sed -i 's|^database\.default\.database.*|database.default.database = /home/runner/work/resume/resume/writable/database.db|g' .env
          sed -i '/^database\.default\.hostname/s/^/#/' .env
          sed -i '/^database\.default\.username/s/^/#/' .env
          sed -i '/^database\.default\.password/s/^/#/' .env
          sed -i '/^database\.default\.port/s/^/#/' .env
          mkdir -p writable
          mkdir -p writable/cache
          mkdir -p writable/logs
          mkdir -p writable/session
          mkdir -p writable/uploads
          chmod -R 777 writable
          touch writable/database.db
          chmod 666 writable/database.db
          php spark migrate
          php spark db:seed ShainaPortfolioSeeder

      - name: Run Controller to Generate Static Page
        run: |
          mkdir -p static_site
          php spark controller Resume index > static_site/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './static_site'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 